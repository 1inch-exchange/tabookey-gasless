module.exports = {
	compileCommand: "cp ../truffle-coverage.js ./truffle.js && truffle compile",
	testCommand: "cp ../truffle-coverage.js ./truffle.js && perl -pi -e 's/7000000/1e8/' migrations/2_deploy_contracts.js && truffle test",
	deepSkip: true,
	skipFiles: [
	  'metacoin/contracts/ConvertLib.sol',
	  'metacoin/contracts/MetaCoin.sol',
	  'metacoin/contracts/Migrations.sol',
	  'metacoin/node_modules/tabookey-gasless/contracts/Migrations.sol',
	  'metacoin/node_modules/tabookey-gasless/contracts/RelayHub.sol',
	  'metacoin/node_modules/tabookey-gasless/contracts/RelayHubApi.sol',
	  'metacoin/node_modules/tabookey-gasless/contracts/RelayRecipient.sol',
	  'metacoin/node_modules/tabookey-gasless/contracts/RelayRecipientApi.sol',
	  'metacoin/node_modules/tabookey-gasless/contracts/RLPReader.sol',
	  'metacoin/node_modules/tabookey-gasless/contracts/SampleRecipient.sol',
	  'metacoin/node_modules/tabookey-gasless/metacoin/contracts/ConvertLib.sol',
	  'metacoin/node_modules/tabookey-gasless/metacoin/contracts/MetaCoin.sol',
	  'metacoin/node_modules/tabookey-gasless/metacoin/contracts/Migrations.sol',
	  'metacoin/node_modules/tabookey-gasless/metacoin/test/TestMetacoin.sol',
	  'metacoin/node_modules/truffle-contract/test/Example.sol',
	  'metacoin/node_modules/truffle-contract/test/ExampleLibrary.sol',
	  'metacoin/node_modules/truffle-contract/test/ExampleLibraryConsumer.sol',
	  'metacoin/node_modules/truffle/build/Assert.sol',
	  'metacoin/node_modules/truffle/build/SafeSend.sol',
	  'metacoin/node_modules/truffle/build/templates/Example.sol',
	  'metacoin/node_modules/truffle/build/templates/Test.sol',
	  'metacoin/node_modules/truffle/test/scenarios/contract_names/contract.sol',
	  'metacoin/node_modules/truffle/test/scenarios/contract_names/floating_import.sol',
	  'metacoin/node_modules/truffle/test/scenarios/contract_names/relative_import.sol',
	  'metacoin/node_modules/truffle/test/scenarios/cyclic_dependencies/Ping.sol',
	  'metacoin/node_modules/truffle/test/scenarios/cyclic_dependencies/Pong.sol',
	  'metacoin/node_modules/truffle/test/scenarios/solidity_testing/TestWithBalance.sol',
	  'metacoin/node_modules/truffle/test/sources/ethpm/contracts/Local.sol',
	  'metacoin/node_modules/truffle/test/sources/ethpm/contracts/PLCRVoting.sol',
	  'metacoin/node_modules/truffle/test/sources/ethpm/installed_contracts/tokens/contracts/eip20/EIP20.sol',
	  'metacoin/node_modules/truffle/test/sources/ethpm/installed_contracts/tokens/contracts/eip20/EIP20Factory.sol',
	  'metacoin/node_modules/truffle/test/sources/ethpm/installed_contracts/tokens/contracts/eip20/EIP20Interface.sol',
	  'metacoin/node_modules/truffle/test/sources/ethpm/installed_contracts/tokens/contracts/Migrations.sol',
	  'metacoin/node_modules/truffle/test/sources/exec/contracts/Executable.sol',
	  'metacoin/node_modules/truffle/test/sources/monorepo/errorproject/contracts/Importer.sol',
	  'metacoin/node_modules/truffle/test/sources/monorepo/installed_contracts/ethpmpkg/EthPMImport.sol',
	  'metacoin/node_modules/truffle/test/sources/monorepo/truffleproject/contracts/Importer.sol',
	  'metacoin/test/TestMetacoin.sol',
	  'server/src/github.com/ethereum/go-ethereum/contracts/chequebook/contract/chequebook.sol',
	  'server/src/github.com/ethereum/go-ethereum/contracts/chequebook/contract/mortal.sol',
	  'server/src/github.com/ethereum/go-ethereum/contracts/chequebook/contract/owned.sol',
	  'server/src/github.com/ethereum/go-ethereum/contracts/ens/contract/AbstractENS.sol',
	  'server/src/github.com/ethereum/go-ethereum/contracts/ens/contract/ENS.sol',
	  'server/src/github.com/ethereum/go-ethereum/contracts/ens/contract/FIFSRegistrar.sol',
	  'server/src/github.com/ethereum/go-ethereum/contracts/ens/contract/PublicResolver.sol',
	],
	testrpcOptions: "--allowUnlimitedContractSize"
};